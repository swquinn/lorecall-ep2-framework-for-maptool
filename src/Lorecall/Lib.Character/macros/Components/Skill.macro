[h:tokenId=currentToken()]
[h:skillName=macro.args]

[h:skill=data.findSkill(skillName)]
[h:characterSkill=character.getSkill(skillName)]
[h:characterSkillProficiency=json.get(characterSkill, "proficiency")]

[h:skillAptitude=json.get(skill, "aptitude")]
[h:skillRank=json.get(skill, "rank")]
[h:aptitudeScore=getProperty(skillAptitude)]
[h:totalRank=skillRank + aptitudeScore]

<div class="skill">
  <i class="icon">
    [h:skillProficiencyIndicator=icons.square()]
    [if(characterSkillProficiency=="PROFICIENT"), code: {
      [h:skillProficiencyIndicator=icons.squareSolid()]
    };{}]
    [if(characterSkillProficiency=="EXPERT"), code: {
      [h:skillProficiencyIndicator="E"]
    };{}]
    [r:macroLink(skillProficiencyIndicator, "SkillEditor@this", "none", characterSkill, tokenId)]
  </i>

  <span class="total-rank">
    [r:strformat("%{totalRank}%")]
  </span>

  [h:args=""]
  [h:args=setStrProp(args, "skill", skillName)]
  [h:args=setStrProp(args, "value", totalRank)]
  [h:skillCheckRollLink=macroLinkText("RollSkillCheck@Lib:Character", "all", args, tokenId)]

  <a class="label" href="[r:skillCheckRollLink]">
    [r:skillName]
    <span class="related-ability">
      ([r:substring(skillAptitude, 0, 3)])
    </span>
  </a>
</div>