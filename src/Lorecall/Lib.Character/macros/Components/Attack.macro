[h:tokenId=currentToken()]
[h:attackId=macro.args]

[h:attacks=getProperty("Attacks")]

[h:attack=json.get(attacks, attackId)]
[h:attackName=json.get(attack, "name")]
[h:attackSkill=json.get(attack, "skill")]
[h:attackType=json.get(attack, "type")]
[h:attackDamage=json.get(attack, "damage")]
[h:attackAmmo=json.get(attack, "ammo")]

[h:attackArgs=""]
[h:attackArgs=setStrProp(attackArgs, "attackId", attackId)]
[h:attackArgs=setStrProp(attackArgs, "tokenId", tokenId)]
[h:attackAction=macroLinkText("RollAttack@Lib:Character", "all", attackArgs, tokenId)]
<tr>
  <td class="name-column">
    <a class="attack-label" title="[r:attackName]" href="[r:attackAction]">[r:attackName]</a>
  </td>

  <td class="attack-column">
    [h:attackSkillCheck=character.getSkillCheck(attackSkill)]
    <span>[r:strformat("%{attackSkill} %{attackSkillCheck}")]</span>
  </td>

  <td class="damage-column">
    <span title='[r:strformat("%{attackDamage}")]'>
      <span>[r:attackDamage]</span>
      [if(attackType=="Ranged"), CODE: {
        [h:attackSS=json.get(attack, "singleShot")]
        [h:attackSA=json.get(attack, "semiAutomatic")]
        [h:attackBF=json.get(attack, "burstFire")]
        [h:attackFA=json.get(attack, "fullAutomatic")]

        [h:attackModes=""]
        [h:attackModes=if(attackSS=="on", listAppend(attackModes, "SS"), "")]
        [h:attackModes=if(attackSA=="on", listAppend(attackModes, "SA"), "")]
        [h:attackModes=if(attackBF=="on", listAppend(attackModes, "BF"), "")]
        [h:attackModes=if(attackFA=="on", listAppend(attackModes, "FA"), "")]
        <span>([r:stringToList(attackModes, ", ", "/")])</span>
      };{}]
    </span>
  </td>

  <td class="ammo-column">
    <span>[r:attackAmmo]</span>
  </td>
  
  <td class="action-column">
    [h:editArgs=""]
    [h:editArgs=setStrProp(editArgs, "attackId", attackId)]
    [h:editArgs=setStrProp(editArgs, "attackName", json.get(attack, "name"))]
    [h:editAction=macroLinkText("AttackEditor@this", "none", editArgs, tokenId)]
    <a id="edit-action" class="action" href="[r:editAction]">
        <i class="icon">[r:icons.edit()]</i>
    </a>

    [h:removeAttackArgs=""]
    [h:removeAttackArgs=setStrProp(removeAttackArgs, "attackId", attackId)]
    [h:removeAttackArgs=setStrProp(removeAttackArgs, "tokenId", tokenId)]
    [h:removeAttackLink=macroLinkText("RemoveAttack@this", "none", removeAttackArgs, tokenId)]
    <a id="edit-action" class="action" href="[r:removeAttackLink]">
        <i class="icon">[r:icons.trash()]</i>
    </a>
  </td>
</tr>